// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelSchedule.BackService.Data;

#nullable disable

namespace TravelSchedule.BackService.Data
{
    [DbContext(typeof(TravelDbContext))]
    [Migration("20240112111014_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("TravelSchedule.BackService.Models.Accomodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("CompletedTravelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomCondition")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeOfAccomodation")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompletedTravelId");

                    b.ToTable("Accomodations");
                });

            modelBuilder.Entity("TravelSchedule.BackService.Models.CompletedTravel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("CheckIn")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TravelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TravelId");

                    b.ToTable("CompletedTravels");
                });

            modelBuilder.Entity("TravelSchedule.BackService.Models.Travel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TravellerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TravellerId");

                    b.ToTable("Travels");
                });

            modelBuilder.Entity("TravelSchedule.BackService.Models.Traveller", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("DataOfBirth")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Travellers");
                });

            modelBuilder.Entity("TravelSchedule.BackService.Models.Accomodation", b =>
                {
                    b.HasOne("TravelSchedule.BackService.Models.CompletedTravel", "CompletedTravels")
                        .WithMany()
                        .HasForeignKey("CompletedTravelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompletedTravels");
                });

            modelBuilder.Entity("TravelSchedule.BackService.Models.CompletedTravel", b =>
                {
                    b.HasOne("TravelSchedule.BackService.Models.Travel", "Travels")
                        .WithMany()
                        .HasForeignKey("TravelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Travels");
                });

            modelBuilder.Entity("TravelSchedule.BackService.Models.Travel", b =>
                {
                    b.HasOne("TravelSchedule.BackService.Models.Traveller", "Travellers")
                        .WithMany()
                        .HasForeignKey("TravellerId");

                    b.Navigation("Travellers");
                });
#pragma warning restore 612, 618
        }
    }
}
